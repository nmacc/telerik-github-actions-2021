env:
  WORKSPACE_ENVIRONMENT_VARIABLE: 'custom workspace environment variable'
on:
  pull_request:
      types: [opened, synchronize, reopened]
jobs:
  pre-build:
    env:
      JOB_ENVIRONMENT_VARIABLE: 'custom job environment variable for ubuntu'
    runs-on: ubuntu-latest
    steps:
    - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
    - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    - run: echo "${{ secrets.PASSWORD }}"
    - name: Print custom environment variables from ubuntu-latest
      env:
        STEP_ENVIRONMENT_VARIABLE: 'custom step environment variable for bash'
      run: |
        echo "Accessing environment variables in run command"
        echo "$WORKSPACE_ENVIRONMENT_VARIABLE"
        echo "$JOB_ENVIRONMENT_VARIABLE"
        echo "$STEP_ENVIRONMENT_VARIABLE"
  lint:
    needs: pre-build    
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint     
  style:
    needs: pre-build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: [2.7, 3.6, 3.8]  
    runs-on: ${{matrix.os}}  
    steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.python}}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
  build:
    needs: [style,lint]
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Build container
      run: |
        echo "Building container iamge"
        ls -la
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: factorial.py
        path: factorial.py
  unit-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Unit testing
      run: |
        python3 -m doctest factorial.py
  database-integration:
    needs: unit-test
    runs-on: ubuntu-latest
    container: node:10.18-jessie
    services:
      postgres:
        image: postgres
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Connect to PostgreSQL
        run: python --version #validate_db.py
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432        
  SAST:
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  deploy:
    needs: [SAST, database-integration]
    runs-on: ubuntu-latest
    steps:
    - name: Deploy
      run: echo "Deploying to cluster"
